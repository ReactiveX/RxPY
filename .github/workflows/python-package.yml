name: Python package

on: [push, pull_request]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Cache Poetry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pypoetry
          key: poetry-cache-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install

      - name: Code checks
        run: |
          poetry run pre-commit run --all-files --show-diff-on-failure

  build:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9, "3.10", 3.11, pypy-3.8]
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Poetry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pypoetry
            ~/Library/Caches/pypoetry
            C:\Users\*\AppData\Local\pypoetry\Cache
          key: poetry-cache-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          pip install poetry
          poetry config installer.parallel false
          poetry install

      - name: Test with pytest
        run: |
          poetry run pytest -n auto

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Cache Poetry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pypoetry
          key: poetry-cache-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install

      - name: Run coverage tests
        run: |
          poetry run coverage run -m pytest

      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_SERVICE_NAME: github
        run: |
          poetry run coveralls
